use std::marker::PhantomData;
use ed25519::sha512::blake2b::CHUNK_128_BYTES;

pub const NUM_VALIDATORS: usize = 10;
pub const QUORUM_SIZE: usize = 7;  // 2/3 + 1 of NUM_VALIDATORS
pub const MAX_NUM_HEADERS_PER_STEP: usize = 5;

//pub const MAX_HEADER_SIZE: usize = CHUNK_128_BYTES * 16; // 2048 bytes
pub const MAX_HEADER_SIZE: usize = CHUNK_128_BYTES * 10; // 1280 bytes.  Keep this for now.
pub const HASH_SIZE: usize = 32;                         // in bytes


pub const ENCODED_PRECOMMIT_LENGTH: usize = 53;

use plonky2::{
    iop::{
        target::Target,
        generator::{SimpleGenerator, GeneratedValues},
        witness::{PartitionWitness, Witness}
    },
    hash::hash_types::RichField,
    plonk::circuit_builder::CircuitBuilder
};
use plonky2_field::extension::Extendable;


pub trait CircuitBuilderUtils {
    fn int_div(
        &mut self,
        dividend: Target,
        divisor: Target,
    ) -> Target;

    fn random_access_vec(
        &mut self, 
        index: Target,
        targets: Vec<Vec<Target>>,
    ) -> Vec<Target>;
}


impl<F: RichField + Extendable<D>, const D: usize> CircuitBuilderUtils for CircuitBuilder<F, D> {
    fn int_div(
        &mut self,
        dividend: Target,
        divisor: Target,
    ) -> Target {
        let quotient = self.add_virtual_target();
        let remainder = self.add_virtual_target();
    
        self.add_simple_generator(FloorDivGenerator::<F, D> {
            divisor,
            dividend,
            quotient,
            remainder,
            _marker: PhantomData
        });
        let base = self.mul(quotient, divisor);
        let rhs = self.add(base, remainder);
        let is_equal = self.is_equal(rhs, dividend);
        self.assert_one(is_equal.target);
        quotient
    }

    fn random_access_vec(
        &mut self, 
        index: Target,
        targets: Vec<Vec<Target>>,
    ) -> Vec<Target> {
        assert!(targets.len() > 0);

        let v_size = targets[0].len();

        // Assert that all vectors have the same length
        targets.iter().for_each(|t| {
            assert_eq!(t.len(), v_size);
        });

        (0..v_size).map(|i| {
            self.random_access(
                index, 
                targets.iter().map(|t| {
                    t[i]
                }).collect::<Vec<_>>())
        }).collect::<Vec<_>>()
    }

}


#[derive(Debug)]
struct FloorDivGenerator<
    F: RichField + Extendable<D>,
    const D: usize
> {
    divisor: Target,
    dividend: Target,
    quotient: Target,
    remainder: Target,
    _marker: PhantomData<F>,
}


impl<
    F: RichField + Extendable<D>,
    const D: usize,
> SimpleGenerator<F> for FloorDivGenerator<F, D> {
    fn dependencies(&self) -> Vec<Target> {
        Vec::from([self.dividend])
    }

    fn run_once(&self, witness: &PartitionWitness<F>, out_buffer: &mut GeneratedValues<F>) {
        let divisor = witness.get_target(self.divisor);
        let dividend = witness.get_target(self.dividend);
        let divisor_int = divisor.to_canonical_u64() as u32;
        let dividend_int = dividend.to_canonical_u64() as u32;
        let quotient = dividend_int / divisor_int;
        let remainder = dividend_int % divisor_int;
        out_buffer.set_target(self.quotient, F::from_canonical_u32(quotient));
        out_buffer.set_target(self.remainder, F::from_canonical_u32(remainder));
    }    
}


pub fn to_bits(msg: Vec<u8>) -> Vec<bool> {
    let mut res = Vec::new();
    for i in 0..msg.len() {
        let char = msg[i];
        for j in 0..8 {
            if (char & (1 << 7 - j)) != 0 {
                res.push(true);
            } else {
                res.push(false);
            }
        }
    }
    res
}


#[cfg(test)]
#[allow(dead_code)]
pub (crate) mod tests {
    use super::{ENCODED_PRECOMMIT_LENGTH, QUORUM_SIZE};

    // Block 576728 contains a new authorities event
    pub const BLOCK_576728_BLOCK_HASH: &str = "b71429ef80257a25358e386e4ca1debe72c38ea69d833e23416a4225fabb1a78";
    pub const BLOCK_576728_HEADER: [u8; 1277] = [145, 37, 123, 201, 49, 223, 45, 154, 145, 243, 45, 174, 108, 166, 7, 174, 158, 65, 27, 56, 237, 135, 56, 115, 142, 175, 231, 187, 129, 109, 20, 100, 98, 51, 35, 0, 17, 7, 105, 180, 197, 184, 80, 189, 59, 130, 118, 179, 157, 175, 109, 236, 227, 36, 206, 246, 46, 33, 76, 55, 104, 167, 161, 45, 167, 168, 255, 124, 230, 60, 111, 63, 40, 141, 233, 163, 233, 202, 220, 147, 131, 92, 72, 137, 41, 229, 135, 197, 106, 156, 67, 240, 79, 42, 225, 216, 1, 144, 18, 92, 16, 6, 66, 65, 66, 69, 181, 1, 1, 0, 0, 0, 0, 242, 170, 2, 5, 0, 0, 0, 0, 132, 24, 218, 28, 195, 207, 205, 210, 155, 177, 68, 219, 195, 68, 95, 191, 78, 185, 118, 68, 23, 159, 105, 110, 197, 91, 230, 232, 78, 134, 191, 107, 168, 242, 68, 176, 161, 6, 240, 222, 175, 33, 113, 91, 182, 59, 198, 239, 156, 91, 35, 117, 88, 6, 8, 113, 180, 114, 223, 61, 248, 151, 228, 15, 219, 250, 82, 182, 184, 109, 108, 67, 40, 72, 64, 61, 19, 182, 101, 51, 156, 38, 223, 194, 83, 99, 123, 85, 63, 209, 122, 230, 61, 147, 255, 8, 4, 66, 65, 66, 69, 201, 6, 1, 40, 216, 130, 184, 127, 107, 182, 17, 4, 134, 185, 135, 25, 24, 132, 218, 176, 59, 56, 65, 133, 163, 68, 166, 208, 244, 42, 71, 152, 248, 40, 102, 126, 1, 0, 0, 0, 0, 0, 0, 0, 136, 184, 35, 131, 230, 139, 198, 231, 194, 236, 202, 246, 95, 203, 45, 254, 175, 104, 76, 11, 209, 108, 207, 30, 224, 165, 71, 31, 86, 146, 102, 18, 1, 0, 0, 0, 0, 0, 0, 0, 60, 63, 94, 197, 118, 215, 152, 192, 190, 181, 59, 63, 172, 47, 127, 56, 92, 143, 47, 142, 222, 133, 60, 222, 189, 5, 107, 142, 9, 184, 86, 43, 1, 0, 0, 0, 0, 0, 0, 0, 4, 228, 188, 183, 251, 160, 190, 148, 254, 193, 64, 107, 99, 37, 198, 184, 16, 125, 105, 157, 194, 107, 152, 89, 233, 194, 83, 247, 184, 13, 159, 111, 1, 0, 0, 0, 0, 0, 0, 0, 208, 164, 119, 102, 76, 144, 255, 230, 250, 232, 44, 62, 72, 2, 68, 28, 84, 51, 223, 186, 8, 232, 130, 158, 128, 189, 42, 115, 38, 237, 8, 9, 1, 0, 0, 0, 0, 0, 0, 0, 218, 80, 70, 177, 218, 5, 120, 187, 184, 89, 83, 46, 10, 100, 110, 58, 67, 59, 41, 197, 193, 209, 225, 93, 11, 208, 58, 209, 130, 106, 11, 42, 1, 0, 0, 0, 0, 0, 0, 0, 16, 55, 57, 204, 187, 248, 50, 52, 120, 246, 27, 83, 30, 119, 77, 120, 189, 32, 80, 46, 166, 12, 120, 128, 25, 128, 51, 197, 31, 52, 22, 77, 1, 0, 0, 0, 0, 0, 0, 0, 128, 216, 166, 193, 89, 148, 120, 136, 54, 143, 214, 96, 155, 176, 65, 100, 65, 247, 3, 144, 182, 52, 177, 187, 126, 101, 232, 253, 15, 57, 223, 58, 1, 0, 0, 0, 0, 0, 0, 0, 2, 138, 164, 210, 183, 107, 97, 45, 227, 101, 125, 94, 203, 82, 12, 224, 140, 27, 138, 166, 62, 219, 109, 150, 162, 217, 146, 83, 10, 41, 122, 56, 1, 0, 0, 0, 0, 0, 0, 0, 128, 33, 54, 130, 231, 82, 188, 228, 30, 95, 19, 157, 13, 71, 83, 165, 146, 166, 91, 247, 160, 152, 19, 19, 22, 132, 236, 176, 188, 157, 130, 57, 1, 0, 0, 0, 0, 0, 0, 0, 110, 123, 152, 217, 186, 110, 152, 80, 229, 112, 144, 152, 1, 101, 244, 202, 125, 164, 14, 61, 87, 22, 132, 66, 184, 37, 234, 255, 75, 115, 3, 11, 4, 70, 82, 78, 75, 89, 6, 1, 40, 12, 123, 33, 122, 98, 180, 207, 61, 186, 237, 4, 107, 63, 210, 223, 239, 5, 145, 32, 107, 79, 193, 173, 22, 234, 109, 207, 184, 194, 97, 76, 85, 1, 0, 0, 0, 0, 0, 0, 0, 141, 155, 21, 234, 131, 53, 39, 5, 16, 19, 91, 127, 124, 94, 249, 78, 13, 247, 14, 117, 29, 60, 95, 149, 253, 26, 166, 215, 118, 105, 41, 182, 1, 0, 0, 0, 0, 0, 0, 0, 225, 40, 141, 149, 212, 140, 18, 56, 155, 67, 152, 210, 191, 118, 153, 142, 148, 82, 196, 14, 2, 43, 214, 63, 157, 165, 41, 133, 93, 66, 123, 36, 1, 0, 0, 0, 0, 0, 0, 0, 204, 109, 230, 68, 163, 95, 75, 32, 86, 3, 250, 18, 86, 18, 223, 33, 29, 79, 157, 117, 224, 124, 132, 216, 92, 211, 94, 163, 42, 107, 28, 237, 1, 0, 0, 0, 0, 0, 0, 0, 228, 192, 138, 6, 142, 114, 164, 102, 226, 243, 119, 232, 98, 181, 178, 237, 71, 60, 79, 14, 88, 215, 210, 101, 161, 35, 173, 17, 254, 242, 167, 151, 1, 0, 0, 0, 0, 0, 0, 0, 43, 167, 192, 11, 252, 193, 43, 86, 163, 6, 196, 30, 196, 76, 65, 16, 66, 208, 184, 55, 164, 13, 128, 252, 101, 47, 165, 140, 207, 183, 134, 0, 1, 0, 0, 0, 0, 0, 0, 0, 7, 149, 144, 223, 52, 205, 31, 162, 248, 60, 177, 239, 119, 11, 62, 37, 74, 187, 0, 250, 125, 191, 178, 247, 242, 27, 56, 58, 122, 114, 107, 178, 1, 0, 0, 0, 0, 0, 0, 0, 51, 90, 68, 109, 85, 107, 216, 177, 45, 46, 135, 178, 194, 176, 162, 182, 18, 248, 156, 149, 154, 198, 15, 149, 92, 51, 68, 137, 192, 54, 62, 67, 1, 0, 0, 0, 0, 0, 0, 0, 212, 187, 136, 245, 207, 81, 198, 76, 152, 253, 220, 241, 56, 57, 164, 141, 227, 88, 89, 128, 78, 78, 59, 109, 178, 39, 233, 177, 87, 216, 50, 236, 1, 0, 0, 0, 0, 0, 0, 0, 72, 62, 116, 144, 188, 18, 164, 231, 130, 34, 74, 81, 59, 191, 88, 29, 253, 133, 232, 145, 23, 180, 224, 245, 102, 59, 119, 7, 94, 4, 16, 151, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 68, 38, 184, 111, 57, 251, 224, 57, 76, 122, 252, 3, 59, 213, 125, 237, 203, 217, 95, 110, 161, 172, 125, 243, 205, 231, 220, 141, 176, 144, 126, 20, 109, 214, 126, 193, 204, 47, 243, 254, 84, 203, 155, 185, 169, 244, 136, 224, 72, 157, 110, 212, 194, 170, 111, 181, 227, 52, 184, 92, 208, 199, 56, 141, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 178, 84, 15, 97, 151, 104, 188, 59, 189, 239, 81, 107, 33, 200, 101, 245, 169, 243, 185, 20, 93, 71, 169, 146, 85, 96, 42, 98, 209, 39, 111, 83, 100, 63, 153, 43, 69, 194, 55, 129, 127, 71, 16, 205, 1, 65, 47, 74, 178, 84, 15, 97, 151, 104, 188, 59, 189, 239, 81, 107, 33, 200, 101, 245, 169, 243, 185, 20, 93, 71, 169, 146, 85, 96, 42, 98, 209, 39, 111, 83, 100, 63, 153, 43, 69, 194, 55, 129, 127, 71, 16, 205, 1, 65, 47, 74, 4, 0];
    pub const BLOCK_576728_PARENT_HASH: &str = "91257bc931df2d9a91f32dae6ca607ae9e411b38ed8738738eafe7bb816d1464";
    pub const BLOCK_576728_STATE_ROOT: &str = "110769b4c5b850bd3b8276b39daf6dece324cef62e214c3768a7a12da7a8ff7c";



    // Sequence of blocks from 530518 to 530528, with block 530528's justification
    pub const BLOCK_530518_BLOCK_HASH: &str = "5560cbee8ff367a5f1c4d44d502b700c6c4eb159813e5f49401f7d9874ea64bd";
    pub const BLOCK_530518_HEADER: [u8; 326] = [11, 155, 214, 14, 201, 215, 153, 12, 152, 229, 33, 95, 229, 230, 155, 61, 111, 128, 139, 247, 5, 21, 150, 52, 152, 86, 146, 170, 110, 85, 174, 77, 90, 97, 32, 0, 8, 95, 166, 134, 2, 158, 161, 155, 29, 139, 181, 79, 199, 203, 252, 170, 237, 150, 234, 208, 100, 59, 136, 213, 70, 16, 113, 171, 80, 33, 120, 97, 111, 111, 141, 86, 229, 25, 156, 120, 245, 45, 51, 76, 109, 227, 251, 152, 136, 21, 45, 69, 123, 37, 59, 230, 175, 117, 149, 207, 19, 53, 248, 61, 8, 6, 66, 65, 66, 69, 52, 2, 1, 0, 0, 0, 79, 246, 1, 5, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 78, 117, 27, 156, 198, 182, 144, 80, 108, 175, 229, 204, 13, 248, 192, 79, 26, 200, 13, 227, 1, 4, 182, 48, 157, 120, 206, 147, 123, 220, 120, 110, 87, 182, 2, 110, 181, 22, 133, 94, 84, 50, 248, 103, 82, 251, 40, 18, 9, 151, 33, 145, 52, 33, 146, 211, 105, 154, 86, 176, 197, 215, 24, 140, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 143, 189, 196, 55, 75, 29, 88, 7, 131, 72, 0, 60, 39, 192, 228, 244, 236, 37, 159, 131, 156, 133, 208, 62, 75, 148, 193, 36, 109, 135, 115, 96, 198, 86, 44, 49, 153, 114, 190, 190, 107, 37, 140, 6, 192, 189, 251, 89, 143, 189, 196, 55, 75, 29, 88, 7, 131, 72, 0, 60, 39, 192, 228, 244, 236, 37, 159, 131, 156, 133, 208, 62, 75, 148, 193, 36, 109, 135, 115, 96, 198, 86, 44, 49, 153, 114, 190, 190, 107, 37, 140, 6, 192, 189, 251, 89, 4, 0];
    pub const BLOCK_530518_PARENT_HASH: &str = "0b9bd60ec9d7990c98e5215fe5e69b3d6f808bf705159634985692aa6e55ae4d";

    pub const BLOCK_530519_BLOCK_HASH: &str = "ad0534358ace1b7c70321e7d72a165f96778c34763ddb007a2e5f42a199f605d";
    pub const BLOCK_530519_HEADER: [u8; 326] = [85, 96, 203, 238, 143, 243, 103, 165, 241, 196, 212, 77, 80, 43, 112, 12, 108, 78, 177, 89, 129, 62, 95, 73, 64, 31, 125, 152, 116, 234, 100, 189, 94, 97, 32, 0, 149, 143, 13, 72, 12, 27, 45, 15, 178, 77, 1, 83, 191, 221, 37, 193, 185, 19, 44, 33, 195, 102, 107, 43, 113, 202, 211, 77, 49, 74, 84, 39, 146, 157, 0, 43, 2, 4, 40, 34, 207, 251, 83, 159, 51, 96, 59, 60, 221, 131, 181, 174, 116, 188, 237, 46, 82, 43, 12, 28, 251, 14, 4, 41, 8, 6, 66, 65, 66, 69, 52, 2, 1, 0, 0, 0, 80, 246, 1, 5, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 78, 110, 141, 227, 104, 243, 253, 129, 240, 96, 218, 177, 194, 54, 178, 230, 216, 23, 228, 179, 168, 30, 90, 58, 57, 173, 222, 68, 215, 40, 247, 94, 224, 91, 139, 177, 97, 99, 37, 26, 7, 72, 89, 144, 255, 10, 183, 146, 12, 128, 214, 244, 244, 19, 237, 86, 136, 104, 187, 97, 104, 117, 114, 143, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 151, 187, 125, 69, 135, 27, 217, 73, 109, 30, 238, 202, 120, 198, 212, 101, 55, 231, 33, 132, 166, 191, 129, 31, 185, 138, 163, 19, 8, 160, 29, 188, 114, 253, 47, 130, 252, 14, 235, 146, 139, 16, 218, 232, 104, 125, 147, 175, 151, 187, 125, 69, 135, 27, 217, 73, 109, 30, 238, 202, 120, 198, 212, 101, 55, 231, 33, 132, 166, 191, 129, 31, 185, 138, 163, 19, 8, 160, 29, 188, 114, 253, 47, 130, 252, 14, 235, 146, 139, 16, 218, 232, 104, 125, 147, 175, 4, 0];
    pub const BLOCK_530519_PARENT_HASH: &str = "5560cbee8ff367a5f1c4d44d502b700c6c4eb159813e5f49401f7d9874ea64bd";

    pub const BLOCK_530520_BLOCK_HASH: &str = "f860aad824b53db4b8c524b0a3cb0fecff631f2aedc4bd88411304bd4d9b088b";
    pub const BLOCK_530520_HEADER: [u8; 326] = [173, 5, 52, 53, 138, 206, 27, 124, 112, 50, 30, 125, 114, 161, 101, 249, 103, 120, 195, 71, 99, 221, 176, 7, 162, 229, 244, 42, 25, 159, 96, 93, 98, 97, 32, 0, 152, 63, 117, 180, 94, 203, 243, 68, 15, 184, 112, 21, 171, 17, 121, 117, 219, 84, 146, 63, 1, 118, 93, 60, 109, 198, 180, 113, 139, 53, 73, 60, 116, 101, 106, 136, 251, 245, 165, 189, 210, 22, 10, 202, 160, 49, 113, 94, 51, 102, 231, 231, 26, 114, 39, 95, 142, 254, 205, 1, 70, 181, 82, 130, 8, 6, 66, 65, 66, 69, 52, 2, 7, 0, 0, 0, 81, 246, 1, 5, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 50, 214, 176, 220, 207, 233, 76, 117, 175, 5, 12, 61, 3, 58, 124, 21, 217, 14, 136, 230, 68, 67, 19, 13, 253, 130, 104, 121, 63, 127, 203, 11, 166, 243, 75, 39, 239, 147, 96, 8, 200, 206, 131, 93, 197, 238, 162, 15, 116, 47, 255, 114, 23, 133, 39, 41, 174, 75, 221, 23, 77, 137, 145, 139, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 140, 219, 193, 159, 198, 193, 94, 135, 17, 8, 100, 66, 233, 198, 102, 69, 98, 132, 184, 53, 214, 196, 20, 67, 16, 103, 143, 25, 25, 178, 86, 143, 181, 165, 248, 55, 124, 233, 65, 131, 225, 71, 194, 52, 30, 199, 18, 140, 140, 219, 193, 159, 198, 193, 94, 135, 17, 8, 100, 66, 233, 198, 102, 69, 98, 132, 184, 53, 214, 196, 20, 67, 16, 103, 143, 25, 25, 178, 86, 143, 181, 165, 248, 55, 124, 233, 65, 131, 225, 71, 194, 52, 30, 199, 18, 140, 4, 0];
    pub const BLOCK_530520_PARENT_HASH: &str = "ad0534358ace1b7c70321e7d72a165f96778c34763ddb007a2e5f42a199f605d";

    pub const BLOCK_530521_BLOCK_HASH: &str = "d81e4e99b8aa7adc87f8a5c412c6b4c0fc114d2e02ededa0818cf2316c614177";
    pub const BLOCK_530521_HEADER: [u8; 326] = [248, 96, 170, 216, 36, 181, 61, 180, 184, 197, 36, 176, 163, 203, 15, 236, 255, 99, 31, 42, 237, 196, 189, 136, 65, 19, 4, 189, 77, 155, 8, 139, 102, 97, 32, 0, 201, 3, 46, 69, 89, 223, 52, 166, 176, 235, 188, 12, 237, 32, 90, 140, 57, 122, 222, 4, 228, 87, 43, 218, 215, 132, 189, 17, 151, 85, 185, 130, 131, 46, 73, 148, 147, 19, 165, 227, 201, 186, 181, 14, 4, 184, 251, 205, 30, 173, 136, 11, 255, 193, 50, 43, 243, 184, 173, 119, 5, 124, 157, 199, 8, 6, 66, 65, 66, 69, 52, 2, 7, 0, 0, 0, 82, 246, 1, 5, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 150, 175, 143, 71, 203, 226, 170, 43, 166, 108, 222, 130, 140, 189, 28, 185, 248, 155, 87, 36, 96, 50, 121, 159, 249, 127, 112, 220, 250, 140, 61, 105, 191, 45, 172, 56, 38, 158, 207, 27, 42, 11, 119, 209, 149, 200, 183, 94, 159, 6, 204, 234, 51, 147, 154, 22, 17, 151, 30, 233, 203, 117, 79, 135, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 171, 140, 214, 133, 219, 125, 182, 177, 223, 9, 163, 189, 102, 120, 209, 92, 132, 19, 48, 129, 179, 231, 143, 24, 13, 123, 211, 5, 91, 124, 234, 25, 60, 62, 105, 202, 189, 235, 198, 222, 4, 177, 225, 62, 243, 152, 101, 123, 171, 140, 214, 133, 219, 125, 182, 177, 223, 9, 163, 189, 102, 120, 209, 92, 132, 19, 48, 129, 179, 231, 143, 24, 13, 123, 211, 5, 91, 124, 234, 25, 60, 62, 105, 202, 189, 235, 198, 222, 4, 177, 225, 62, 243, 152, 101, 123, 4, 0];
    pub const BLOCK_530521_PARENT_HASH: &str = "f860aad824b53db4b8c524b0a3cb0fecff631f2aedc4bd88411304bd4d9b088b";

    pub const BLOCK_530522_BLOCK_HASH: &str = "21fb057c79a04d5028cee34bb0cf45b67979df73726616a8cc16183031a2db4b";
    pub const BLOCK_530522_HEADER: [u8; 326] = [216, 30, 78, 153, 184, 170, 122, 220, 135, 248, 165, 196, 18, 198, 180, 192, 252, 17, 77, 46, 2, 237, 237, 160, 129, 140, 242, 49, 108, 97, 65, 119, 106, 97, 32, 0, 200, 121, 53, 155, 146, 190, 124, 118, 57, 209, 227, 73, 37, 43, 51, 12, 44, 99, 156, 57, 106, 217, 192, 32, 39, 112, 209, 56, 169, 156, 39, 247, 190, 57, 78, 41, 70, 190, 166, 26, 108, 47, 63, 47, 186, 164, 123, 61, 17, 215, 141, 20, 26, 40, 47, 148, 27, 57, 133, 92, 66, 135, 188, 34, 8, 6, 66, 65, 66, 69, 52, 2, 9, 0, 0, 0, 83, 246, 1, 5, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 158, 53, 15, 126, 57, 55, 165, 91, 35, 111, 180, 185, 63, 16, 115, 2, 26, 227, 55, 196, 81, 157, 178, 126, 126, 22, 74, 37, 102, 35, 232, 14, 137, 190, 199, 161, 64, 26, 187, 95, 130, 17, 85, 85, 185, 97, 114, 249, 183, 140, 39, 172, 203, 245, 156, 6, 80, 41, 191, 200, 136, 59, 188, 135, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 176, 155, 248, 6, 211, 101, 184, 95, 19, 129, 104, 155, 46, 231, 42, 126, 188, 24, 233, 179, 81, 250, 204, 95, 24, 16, 126, 190, 156, 218, 104, 19, 241, 7, 5, 143, 28, 75, 222, 34, 2, 131, 99, 63, 87, 51, 30, 19, 176, 155, 248, 6, 211, 101, 184, 95, 19, 129, 104, 155, 46, 231, 42, 126, 188, 24, 233, 179, 81, 250, 204, 95, 24, 16, 126, 190, 156, 218, 104, 19, 241, 7, 5, 143, 28, 75, 222, 34, 2, 131, 99, 63, 87, 51, 30, 19, 4, 0];
    pub const BLOCK_530522_PARENT_HASH: &str = "d81e4e99b8aa7adc87f8a5c412c6b4c0fc114d2e02ededa0818cf2316c614177";

    pub const BLOCK_530523_BLOCK_HASH: &str = "39495b7127dea0a7544b6a2be5efb2e8b98d0d0a6633354f9532fd83a1023180";
    pub const BLOCK_530523_HEADER: [u8; 326] = [33, 251, 5, 124, 121, 160, 77, 80, 40, 206, 227, 75, 176, 207, 69, 182, 121, 121, 223, 115, 114, 102, 22, 168, 204, 22, 24, 48, 49, 162, 219, 75, 110, 97, 32, 0, 146, 88, 180, 41, 184, 209, 73, 28, 7, 42, 33, 77, 35, 192, 56, 240, 99, 224, 239, 31, 238, 52, 20, 174, 185, 187, 93, 2, 16, 240, 117, 238, 139, 225, 166, 147, 12, 77, 183, 81, 153, 22, 77, 57, 73, 193, 96, 145, 126, 222, 117, 160, 97, 242, 16, 19, 57, 92, 108, 197, 73, 220, 22, 87, 8, 6, 66, 65, 66, 69, 52, 2, 0, 0, 0, 0, 84, 246, 1, 5, 0, 0, 0, 0, 5, 66, 65, 66, 69, 1, 1, 110, 127, 183, 200, 168, 12, 163, 60, 241, 140, 228, 71, 5, 239, 119, 214, 166, 47, 209, 109, 58, 146, 181, 113, 200, 245, 108, 121, 146, 189, 246, 83, 116, 77, 108, 161, 74, 181, 59, 178, 41, 164, 98, 58, 191, 139, 36, 129, 77, 78, 36, 104, 52, 121, 115, 76, 172, 139, 236, 225, 89, 168, 110, 140, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 138, 75, 67, 169, 57, 170, 113, 233, 87, 76, 152, 35, 15, 144, 24, 228, 165, 148, 170, 171, 108, 252, 241, 134, 25, 144, 217, 53, 26, 141, 241, 164, 137, 183, 114, 213, 164, 149, 211, 254, 141, 131, 113, 206, 55, 175, 207, 245, 138, 75, 67, 169, 57, 170, 113, 233, 87, 76, 152, 35, 15, 144, 24, 228, 165, 148, 170, 171, 108, 252, 241, 134, 25, 144, 217, 53, 26, 141, 241, 164, 137, 183, 114, 213, 164, 149, 211, 254, 141, 131, 113, 206, 55, 175, 207, 245, 4, 0];
    pub const BLOCK_530523_PARENT_HASH: &str = "21fb057c79a04d5028cee34bb0cf45b67979df73726616a8cc16183031a2db4b";

    pub const BLOCK_530524_BLOCK_HASH: &str = "4bfd5754a45daef37080d5de175737473e209bc26772ebc81485ef7892926a9a";
    pub const BLOCK_530524_HEADER: [u8; 423] = [57, 73, 91, 113, 39, 222, 160, 167, 84, 75, 106, 43, 229, 239, 178, 232, 185, 141, 13, 10, 102, 51, 53, 79, 149, 50, 253, 131, 161, 2, 49, 128, 114, 97, 32, 0, 22, 196, 164, 88, 29, 53, 123, 203, 140, 252, 0, 255, 231, 108, 155, 64, 36, 21, 115, 125, 211, 51, 133, 61, 50, 26, 171, 195, 12, 101, 45, 237, 68, 131, 79, 10, 196, 191, 102, 173, 42, 104, 27, 217, 174, 50, 118, 125, 190, 5, 123, 82, 139, 43, 117, 234, 195, 86, 132, 130, 63, 254, 30, 34, 8, 6, 66, 65, 66, 69, 181, 1, 1, 6, 0, 0, 0, 85, 246, 1, 5, 0, 0, 0, 0, 202, 232, 36, 72, 160, 22, 45, 97, 113, 94, 242, 7, 224, 191, 196, 83, 171, 63, 98, 2, 21, 167, 102, 172, 106, 182, 90, 68, 177, 247, 136, 49, 152, 43, 224, 157, 63, 169, 54, 153, 164, 221, 82, 139, 254, 13, 160, 194, 201, 59, 10, 43, 129, 174, 61, 246, 5, 208, 196, 26, 54, 124, 6, 0, 209, 31, 122, 203, 92, 95, 37, 233, 29, 125, 95, 146, 121, 45, 99, 78, 211, 238, 35, 49, 151, 23, 28, 158, 28, 53, 37, 73, 88, 64, 29, 4, 5, 66, 65, 66, 69, 1, 1, 152, 22, 49, 129, 180, 93, 133, 46, 245, 65, 155, 144, 71, 162, 110, 204, 70, 250, 159, 75, 249, 130, 237, 22, 161, 171, 136, 63, 188, 50, 132, 68, 6, 120, 155, 114, 21, 17, 88, 83, 52, 103, 122, 90, 106, 123, 35, 245, 163, 161, 2, 39, 48, 136, 137, 77, 101, 249, 95, 78, 146, 147, 142, 130, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 185, 64, 70, 252, 214, 210, 93, 108, 180, 199, 173, 39, 204, 44, 139, 28, 233, 58, 65, 71, 10, 28, 209, 10, 47, 234, 63, 214, 8, 157, 182, 187, 114, 26, 126, 9, 134, 131, 163, 116, 36, 108, 63, 203, 16, 92, 148, 3, 185, 64, 70, 252, 214, 210, 93, 108, 180, 199, 173, 39, 204, 44, 139, 28, 233, 58, 65, 71, 10, 28, 209, 10, 47, 234, 63, 214, 8, 157, 182, 187, 114, 26, 126, 9, 134, 131, 163, 116, 36, 108, 63, 203, 16, 92, 148, 3, 4, 0];
    pub const BLOCK_530524_PARENT_HASH: &str = "39495b7127dea0a7544b6a2be5efb2e8b98d0d0a6633354f9532fd83a1023180";

    pub const BLOCK_530525_BLOCK_HASH: &str = "bd3b346e93e94e1c8395b9a3fbb3c72d3a162de803709a2b49802fec6f803271";
    pub const BLOCK_530525_HEADER: [u8; 423] = [75, 253, 87, 84, 164, 93, 174, 243, 112, 128, 213, 222, 23, 87, 55, 71, 62, 32, 155, 194, 103, 114, 235, 200, 20, 133, 239, 120, 146, 146, 106, 154, 118, 97, 32, 0, 146, 4, 82, 246, 154, 146, 68, 111, 2, 88, 170, 132, 7, 161, 112, 251, 109, 113, 91, 65, 23, 63, 118, 54, 156, 247, 161, 140, 97, 99, 176, 176, 229, 133, 86, 151, 2, 218, 143, 35, 241, 55, 170, 107, 123, 179, 65, 163, 99, 36, 200, 73, 15, 73, 157, 64, 78, 219, 79, 107, 231, 17, 82, 232, 8, 6, 66, 65, 66, 69, 181, 1, 1, 6, 0, 0, 0, 86, 246, 1, 5, 0, 0, 0, 0, 54, 227, 94, 126, 182, 174, 73, 177, 220, 47, 25, 131, 237, 206, 0, 67, 215, 119, 43, 58, 225, 47, 218, 231, 45, 26, 73, 152, 242, 130, 101, 115, 192, 177, 212, 56, 143, 56, 138, 63, 130, 134, 2, 62, 157, 120, 115, 196, 250, 31, 136, 41, 138, 93, 155, 32, 207, 221, 103, 164, 126, 13, 88, 6, 130, 84, 51, 50, 170, 65, 150, 248, 110, 234, 225, 224, 120, 21, 106, 14, 229, 62, 238, 201, 224, 7, 187, 98, 121, 205, 88, 55, 55, 250, 44, 11, 5, 66, 65, 66, 69, 1, 1, 128, 222, 206, 14, 221, 149, 122, 116, 170, 27, 131, 188, 146, 244, 91, 213, 6, 16, 195, 68, 136, 208, 177, 102, 187, 236, 65, 74, 32, 58, 241, 64, 140, 215, 55, 157, 146, 124, 173, 154, 169, 204, 240, 253, 124, 126, 123, 245, 77, 39, 211, 66, 145, 35, 188, 83, 106, 15, 199, 103, 250, 86, 29, 140, 0, 4, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 136, 156, 99, 231, 220, 188, 7, 141, 55, 187, 205, 27, 169, 206, 156, 245, 132, 146, 176, 214, 140, 203, 149, 216, 156, 247, 50, 242, 207, 191, 13, 128, 199, 45, 237, 209, 246, 247, 223, 167, 182, 173, 229, 61, 171, 104, 31, 195, 136, 156, 99, 231, 220, 188, 7, 141, 55, 187, 205, 27, 169, 206, 156, 245, 132, 146, 176, 214, 140, 203, 149, 216, 156, 247, 50, 242, 207, 191, 13, 128, 199, 45, 237, 209, 246, 247, 223, 167, 182, 173, 229, 61, 171, 104, 31, 195, 48, 0];
    pub const BLOCK_530525_PARENT_HASH: &str = "4bfd5754a45daef37080d5de175737473e209bc26772ebc81485ef7892926a9a";

    pub const BLOCK_530526_BLOCK_HASH: &str = "60ee3874d6f79ba54bb4f9b62972e905a0cc4288e442879717bd62035fccf489";
    pub const BLOCK_530526_HEADER: [u8; 423] = [189, 59, 52, 110, 147, 233, 78, 28, 131, 149, 185, 163, 251, 179, 199, 45, 58, 22, 45, 232, 3, 112, 154, 43, 73, 128, 47, 236, 111, 128, 50, 113, 122, 97, 32, 0, 125, 88, 216, 106, 78, 15, 223, 129, 208, 221, 82, 33, 23, 7, 114, 152, 215, 15, 89, 196, 120, 191, 146, 61, 43, 28, 242, 215, 27, 174, 144, 5, 159, 181, 61, 184, 49, 49, 241, 40, 61, 216, 252, 230, 229, 97, 72, 65, 60, 208, 229, 23, 161, 209, 187, 22, 177, 64, 132, 195, 232, 41, 27, 156, 8, 6, 66, 65, 66, 69, 181, 1, 1, 5, 0, 0, 0, 87, 246, 1, 5, 0, 0, 0, 0, 208, 37, 173, 168, 177, 237, 96, 227, 63, 185, 51, 11, 22, 194, 246, 179, 137, 240, 114, 18, 242, 24, 243, 33, 223, 65, 133, 170, 209, 150, 110, 20, 70, 170, 204, 180, 177, 137, 238, 198, 152, 188, 19, 55, 15, 89, 81, 42, 190, 228, 199, 169, 107, 28, 114, 88, 230, 235, 10, 19, 168, 172, 130, 6, 91, 73, 146, 91, 151, 200, 100, 32, 139, 8, 216, 184, 221, 191, 175, 118, 41, 254, 41, 238, 163, 33, 122, 66, 109, 61, 237, 177, 230, 145, 66, 4, 5, 66, 65, 66, 69, 1, 1, 226, 243, 40, 252, 187, 22, 38, 36, 184, 227, 93, 208, 252, 234, 147, 124, 181, 5, 242, 180, 180, 9, 148, 27, 173, 18, 210, 144, 253, 32, 193, 16, 197, 38, 37, 4, 46, 144, 73, 77, 145, 93, 241, 39, 145, 88, 155, 250, 232, 235, 104, 109, 144, 168, 129, 60, 218, 183, 37, 44, 208, 75, 168, 142, 0, 4, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 171, 84, 213, 115, 238, 211, 84, 39, 200, 191, 146, 137, 124, 72, 221, 18, 87, 79, 183, 67, 76, 135, 16, 187, 166, 24, 64, 10, 200, 213, 118, 176, 234, 209, 7, 223, 225, 29, 13, 147, 99, 228, 18, 66, 75, 82, 1, 155, 171, 84, 213, 115, 238, 211, 84, 39, 200, 191, 146, 137, 124, 72, 221, 18, 87, 79, 183, 67, 76, 135, 16, 187, 166, 24, 64, 10, 200, 213, 118, 176, 234, 209, 7, 223, 225, 29, 13, 147, 99, 228, 18, 66, 75, 82, 1, 155, 48, 0];
    pub const BLOCK_530526_PARENT_HASH: &str = "bd3b346e93e94e1c8395b9a3fbb3c72d3a162de803709a2b49802fec6f803271";

    pub const BLOCK_530527_BLOCK_HASH: &str = "62f1aaf6297b86b3749448d66cc43deada49940c3912a4ec4916344058e8f065";
    pub const BLOCK_530527_HEADER: [u8; 423] = [96, 238, 56, 116, 214, 247, 155, 165, 75, 180, 249, 182, 41, 114, 233, 5, 160, 204, 66, 136, 228, 66, 135, 151, 23, 189, 98, 3, 95, 204, 244, 137, 126, 97, 32, 0, 190, 164, 124, 198, 148, 159, 37, 236, 27, 38, 47, 14, 45, 255, 92, 44, 150, 159, 222, 131, 77, 242, 223, 82, 2, 83, 60, 239, 59, 240, 100, 159, 96, 27, 46, 203, 51, 252, 140, 150, 191, 182, 131, 236, 137, 101, 220, 13, 234, 16, 27, 244, 228, 172, 234, 8, 48, 159, 13, 152, 219, 155, 247, 203, 8, 6, 66, 65, 66, 69, 181, 1, 1, 3, 0, 0, 0, 88, 246, 1, 5, 0, 0, 0, 0, 190, 158, 92, 111, 241, 162, 35, 126, 93, 188, 37, 82, 192, 193, 97, 255, 220, 78, 2, 221, 136, 16, 40, 209, 176, 62, 99, 123, 241, 3, 171, 74, 153, 142, 189, 223, 96, 214, 248, 72, 130, 18, 61, 206, 59, 90, 74, 134, 243, 152, 158, 147, 17, 32, 50, 17, 123, 252, 105, 201, 101, 221, 52, 12, 228, 84, 40, 97, 46, 24, 29, 44, 193, 195, 239, 85, 92, 11, 209, 116, 131, 131, 112, 141, 93, 248, 119, 31, 223, 87, 113, 197, 199, 248, 153, 15, 5, 66, 65, 66, 69, 1, 1, 100, 140, 107, 114, 139, 31, 108, 148, 6, 14, 44, 185, 118, 71, 240, 246, 107, 200, 22, 228, 193, 191, 22, 86, 191, 215, 245, 172, 170, 103, 161, 33, 231, 34, 30, 180, 220, 197, 119, 187, 76, 252, 234, 86, 161, 209, 72, 150, 67, 111, 29, 80, 105, 21, 27, 224, 76, 214, 153, 24, 99, 218, 93, 133, 0, 4, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 1, 150, 25, 213, 166, 9, 223, 191, 127, 80, 148, 89, 6, 174, 43, 165, 238, 147, 157, 55, 253, 47, 218, 243, 92, 25, 160, 242, 210, 121, 252, 26, 22, 232, 127, 72, 52, 89, 70, 79, 112, 217, 198, 184, 97, 175, 188, 82, 217, 150, 25, 213, 166, 9, 223, 191, 127, 80, 148, 89, 6, 174, 43, 165, 238, 147, 157, 55, 253, 47, 218, 243, 92, 25, 160, 242, 210, 121, 252, 26, 22, 232, 127, 72, 52, 89, 70, 79, 112, 217, 198, 184, 97, 175, 188, 82, 217, 4, 0];
    pub const BLOCK_530527_PARENT_HASH: &str = "60ee3874d6f79ba54bb4f9b62972e905a0cc4288e442879717bd62035fccf489";
    pub const BLOCK_530527_PRECOMMIT_MESSAGE: [u8; ENCODED_PRECOMMIT_LENGTH] = [
                1,
                98, 241, 170, 246, 41, 123, 134, 179, 116, 148, 72, 214, 108, 196, 61, 234, 218, 73, 148, 12, 57, 18, 164, 236, 73, 22, 52, 64,
                88, 232, 240, 101,
                95, 24, 8, 0,
                104, 11, 0, 0, 0, 0, 0, 0,
                240, 1, 0, 0, 0, 0, 0, 0];
    pub const BLOCK_530527_AUTHORITY_SET_ID: u64 = 496;
    pub const BLOCK_530527_AUTHORITY_SIGS: [&str; QUORUM_SIZE] = [
        "3ebc508daaf5edd7a4b4779743ce9241519aa8940264c2be4f39dfd0f7a4f2c4c587752fbc35d6d34b8ecd494dfe101e49e6c1ccb0e41ff2aa52bc481fcd3e0c",
        "48f851a4cb99db770461b3b42e7a055fb4801a2a4d2627691e52d0bb955bc8c6c490b0d04d97365e39b7cffeb4489318f28deddbc0710a57f4d94a726a98df01",
        "cbc199cf5754103a3a52d51795596c1535a8766ea84073d6c064db28fa0a357521dd912516d694813e21d279a72f11b59029bed7671db6b0d2ee0cd68d0ebb0f",
        "8f006a2ac7cd3396d20d2230204e2742fd413bde5c4ad6ad688f01def90ae2b80bcfee0507aedbcc01a389c74f7c5315eadedff800f3ff8d7482c2d8afe47500",
        "d5b234c6268f1d822217ac2a88358d31ec14f8f975b0f5d3f87ada7dd88e87400f11e9aac94cab3c2d1e8d38088cc505e9426f35d07a5ae9f7bb5c33244f160a",
        "da57013e372c8cd4aa7bc6c6112d9404325e8d48fcc02c51ad915a725ee0424c3a54cee03dfe315d91f3e6a576f8134a17b28717485340c9ac1ebfe7fc72360f",
        "b22b809b0249ee4e8d43d3aee1a2f40bd529f9eaaa6493d7ec8198b5c93a15ce1e7d653d2aaf710ebfef4ff5aec8e120faf22776417b3621bf6b9de4af540805"
    ];
    pub const BLOCK_530527_AUTHORITY_PUB_KEYS: [&str; QUORUM_SIZE] = [
        "0e0945b2628f5c3b4e2a6b53df997fc693344af985b11e3054f36a384cc4114b",
        "5568a33085a85e1680b83823c6b4b8a0b51d506748b5d5266dd536e258e18a9d",
        "8916179559464bd193d94b053b250a0edf3da5b61d1f2bf2bf2640930dfd2c0e",
        "8d9b15ea8335270510135b7f7c5ef94e0df70e751d3c5f95fd1aa6d7766929b6",
        "8e9edb840fcf9ce51b9d2e65dcae423aafd03ab5973da8d806207395a26af66e",
        "ba76ee41deca67a1d69113f89e233df3a63e6722ca988163848770f4659eb150",
        "e4c08a068e72a466e2f377e862b5b2ed473c4f0e58d7d265a123ad11fef2a797"
    ];
}
